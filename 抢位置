(async function () {
    world.onPlayerJoin(async ({ entity }) => {
        entity.player.spawnPoint = new Box3Vector3(68, 73, 69);
        entity.player.forceRespawn();
        entity.player.directMessage('欢迎游玩《抢位置》，请等待新一轮游戏开始...');
        await sleep(1000);
    });


})();

(async function () {
    var game, winer;

    function mathRandomInt(a, b) {
        if (a > b) {
            // Swap a and b to ensure a is smaller.
            var c = a;
            a = b;
            b = c;
        }
        return Math.floor(Math.random() * (b - a + 1) + a);
    }


    game = 1;
    while (game == 1) {
        for (let i = 0; i < 128; i++) {
            for (let j = 70; j < 71; j++) {
                for (let k = 0; k < 128; k++) {
                    voxels.setVoxel(i, j, k, 'air')
                }
            }
        }
        world.say('新一轮游戏开始！')
        await sleep(2000);
        for (let i = 0; i < 128; i++) {
            for (let j = 70; j < 71; j++) {
                for (let k = 0; k < 128; k++) {
                    voxels.setVoxel(i, j, k, 'glass')
                }
            }
        }

  for (var count2 = 0; count2 < 4; count2++) {
    var repeat_end = mathRandomInt(1, 9);
    for (var count = 0; count < repeat_end; count++) {
      voxels.setVoxel((mathRandomInt(1, 127)),9,(mathRandomInt(1, 127)),(voxels.id("green_light")));
    }
    world.say('新一局游戏开始！')
    await sleep(15000);
    for (let i = 0; i < 128; ++i) {     
    for (let j = 0; j < 128; ++j) {         
        voxels.setVoxel(i, 8, j, 'air')
    } 
}

    await sleep(5000);
    for (let i = 0; i < 128; ++i) {     
    for (let j = 0; j < 128; ++j) {         
        voxels.setVoxel(i, 8, j, 'dark_gray')
    } 
}
for (let i = 0; i < 128; ++i) {     
    for (let j = 0; j < 128; ++j) {         
        voxels.setVoxel(i, 9, j, 'air')
    } 
}

    await sleep(5000);
    world.querySelectorAll("player").forEach((entity)=>{
      if (20 < entity.position.y) {
        world.say(['名单更新：玩家 ',entity.player.name,' 掉出世界，游戏失败！'].join(''));
      }

    });
    world.say('新一局游戏开始...');
  }

await sleep(1000);
world.querySelectorAll("player").forEach((entity)=>{
    if (20 > entity.position.y) {
      world.say(['恭喜还在场上的 ',entity.player.name,' 获得最终的胜利！！！'].join(''));
    }
});
  await sleep(15000);
  world.say('新一轮游戏即将开始');
}


})();
